@model IEnumerable<library.transactionBorrow>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section search {
    <div style="width: 500px;">
        @using (Html.BeginForm())
        {
            <div style="display: inline-flex; align-items: center;">
                @Html.TextBox("Search", "", new { @id = "Search", @style = "padding: 5px; width: 200px; border: 1px solid #ccc; border-radius: 4px 0 0 4px; border-right: none;" })
                <input type="submit" name="submit" value="Tìm" style="padding: 5px 10px; background-color: #007bff; color: white; border: 1px solid #007bff; border-radius: 0 4px 4px 0; cursor: pointer;" />
            </div>
        }
    </div>
}
<h2>Transaction Borrow Records</h2>

<p>
    @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-primary" })
</p>

<div class="card-container">
    @{
        var groupedTransactions = Model.GroupBy(t => t.idBorrow);
    }

    @foreach (var group in groupedTransactions)
    {
        <div class="card">
            <div class="card-header">
                <h4>Borrow ID: @group.Key</h4>
                <p><i class="icon-reader"></i> Reader ID: @group.First().reader.lastName</p>
                <p><i class="icon-staff"></i> Staff ID: @group.First().staff.nameStaff</p>
                <p><i class="fa fa-calendar"></i> Borrow date: @(group.First().borrowDate.HasValue ? group.First().borrowDate.Value.ToString("dd/MM/yyyy") : "n/a")</p>
                <p><i class="fa fa-calendar"></i> Due Date: @(group.First().dueDate.HasValue ? group.First().dueDate.Value.ToString("dd/MM/yyyy") : "n/a")</p>
                <p><i class="fas fa-id-card"></i> Status transaction: @group.First().note</p>
            </div>
            <div class="card-body">
                <ul>
                    @foreach (var item in group)
                    {
                        <li>
                            <strong>Book ID:</strong> @item.book.titleBook <br />
                            <strong>Price:</strong> @item.price<br />
                            <strong>Quantity:</strong> @item.quantity<br />
                        </li>
                    }
                    @using (Html.BeginForm("DeleteConfirmed", "transactionBorrow", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="id" value="@group.First().transactionID" />
                        <button type="submit" class="btn btn-danger btn-sm" onclick="return confirm('Are you sure you want to delete this item?');">Delete choose</button>
                    }
                </ul>
            </div>
            <div class="card-footer">
                @using (Html.BeginForm("DeleteAllByBorrowId", "transactionBorrow", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="idBorrow" value="@group.Key" />
                    <button type="submit" class="btn btn-danger btn-sm" onclick="return confirm('Are you sure you want to delete all items with this Borrow ID?');">
                        Return book
                    </button>
                }
                <br />

                <!-- Print Button -->
                <a href="@Url.Action("PrintTransaction", "transactionBorrow", new { id = group.Key })" class="btn btn-secondary btn-sm">Print</a>
            </div>

        </div>
    }
</div>

<style>
    .card-container {
        display: flex;
        flex-wrap: wrap;
        gap: 1rem;
        justify-content: space-around;
    }

    .card {
        background-color: #ffffff;
        border: 1px solid #e1e4e8;
        padding: 1.5rem;
        width: 500px;
        border-radius: 12px;
        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
        transition: transform 0.2s;
    }

        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 12px 24px rgba(0, 0, 0, 0.15);
        }

    .card-header {
        font-weight: bold;
        background-color: #f0f4f8;
        padding: 1rem;
        border-bottom: 2px solid #ddd;
        border-radius: 8px 8px 0 0;
        color: #333;
    }

    .card-body {
        padding: 1rem;
        background-color: #fafafa;
        border-radius: 0 0 8px 8px;
    }

        .card-body ul {
            list-style: none;
            padding: 0;
        }

        .card-body li {
            padding: 0.5rem 0;
            border-bottom: 1px solid #ececec;
        }

    .card-footer {
        text-align: center;
        padding-top: 1rem;
    }

        .card-footer .btn {
            margin: 0 0.2rem;
            padding: 0.3rem 1rem;
            font-size: 0.85rem;
        }

    /* Optional icon styling */
    .icon-reader::before {
        content: "📘";
        margin-right: 0.3rem;
    }

    .icon-staff::before {
        content: "👤";
        margin-right: 0.3rem;
    }
</style>
